name: build-devstation
on:
  pull_request:
    branches:
      - main
    paths-ignore:
      - "*"
      - .github/**
  push:
    branches:
      - main
    paths-ignore:
      - "*"
      - .github/**
  schedule:
    - cron: "00 06 * * *" # Build at 06:00 UTC every day.
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  REPO_CONTEXT_DIR: ./devstation
  IMAGE_NAME: devstation
  IMAGE_DESC: Custom Fedora Atomic Image for Software Development
  IMAGE_REGISTRY: "ghcr.io/${{ github.repository_owner }}"

jobs:
  build_push:
    name: Build and push image
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - name: Compute variables
        id: vars
        shell: bash
        run: |
          echo "timestamp=$(date -u +"%Y-%m-%dT%H:%M:%SZ")" >> $GITHUB_OUTPUT
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "tags=latest" >> $GITHUB_OUTPUT

      - name: Generate metadata
        uses: docker/metadata-action@v5
        id: meta
        with:
          images: |
            ${{ env.IMAGE_NAME }}
          labels: |
            org.opencontainers.image.title=${{ env.IMAGE_NAME }}
            org.opencontainers.image.description=${{ env.IMAGE_DESC }}
            org.opencontainers.image.created=${{ steps.vars.outputs.timestamp }}

      - name: Build image
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          containerfiles: ${{ env.REPO_CONTEXT_DIR }}/Containerfile
          context: ${{ env.REPO_CONTEXT_DIR }}
          image: ${{ env.IMAGE_NAME }}
          tags: |
            ${{ steps.vars.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          oci: true

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Image to GHCR
        uses: redhat-actions/push-to-registry@v2
        id: push
        if: github.event_name != 'pull_request'
        env:
          REGISTRY_USER: ${{ github.actor }}
          REGISTRY_PASSWORD: ${{ github.token }}
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}
          registry: ${{ env.IMAGE_REGISTRY }}
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_PASSWORD }}
